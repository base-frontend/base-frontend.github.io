{"version":3,"sources":["components/PageHeader/PageHeader.tsx","components/Button/Button.tsx","views/Pit/components/ExchangeModal.tsx","hooks/useCatchError.ts","views/Pit/components/ExchangeCard.tsx","hooks/useCashPriceInLastTWAP.ts","views/Pit/components/ExchangeStat.tsx","hooks/useBondsPurchasable.ts","tomb-finance/constants.ts","views/Pit/Pit.tsx","components/UnlockWallet/UnlockWallet.tsx","hooks/useApprove.ts","components/Spacer/Spacer.tsx","hooks/useBondStats.ts"],"names":["StyledPageHeader","styled","div","props","theme","spacing","StyledTitle","h1","color","grey","StyledSubtitle","h3","PageHeader","icon","subtitle","title","StyledButton","button","boxShadow","disabled","fontSize","size","padding","undefined","StyledLink","Link","StyledExternalLink","a","Button","buttonColor","buttonSize","buttonPadding","children","href","onClick","text","to","variant","useContext","ThemeContext","teal","gray","primary","main","ButtonChild","useMemo","target","ExchangeModal","max","description","onConfirm","onDismiss","action","tokenName","useState","val","setVal","fullBalance","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","value","handleSelectMax","Modal","ModalTitle","TokenInput","onSelectMax","onChange","symbol","Label","ModalActions","useCatchError","addPopup","useAddPopup","promise","message","catch","err","includes","console","error","stack","StyledCardTitle","StyledCardIcon","StyledExchanger","StyledExchangeArrow","StyledToken","StyledCardActions","StyledDesc","span","StyledCardContentInner","ExchangeCard","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","disabledDescription","catchError","Treasury","useTombFinance","contracts","useApprove","address","approveStatus","approve","balance","useTokenBalance","useModal","onPresent","Card","CardContent","style","background","TokenSymbol","faArrowRight","ApprovalState","APPROVED","PENDING","UNKNOWN","useCashPriceInLastTWAP","BigNumber","from","price","setPrice","tombFinance","fetchCashPrice","getTombPriceInLastTWAP","useEffect","refreshInterval","setInterval","config","clearInterval","ExchangeStat","useBondsPurchasable","setBalance","getBondsPurchasable","fetchBondsPurchasable","DECIMALS_18","pow","BOND_REDEEM_PRICE_BN","mul","BackgroundImage","createGlobalStyle","StyledBond","StyledCardWrapper","StyledStatsWrapper","Pit","path","useRouteMatch","account","useWallet","addTransaction","useTransactionAdder","bondStat","useBondStats","cashPrice","bondsPurchasable","bondBalance","TBOND","handleBuyBonds","amount","buyBonds","tx","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","Page","Typography","align","gutterBottom","exact","TOMB","getDisplayBalance","Spacer","eq","UnlockWallet","Box","position","top","left","transform","AccountButton","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","token","spender","pendingApproval","useHasPendingApproval","currentAllowance","useAllowance","approvalState","lt","NOT_APPROVED","response","approval","tokenAddress","StyledSpacer","s","stat","setStat","slowRefresh","useRefresh","getBondStat","fetchBondPrice"],"mappings":"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","file":"static/js/16.490967ee.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface PageHeaderProps {\n  icon: React.ReactNode;\n  subtitle?: string;\n  title?: string;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ icon, subtitle, title }) => {\n  return (\n    <StyledPageHeader>\n      {/* <StyledIcon>{icon}</StyledIcon> */}\n      <StyledTitle>{title}</StyledTitle>\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\n    </StyledPageHeader>\n  );\n};\n\nconst StyledPageHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\n  padding-top: ${(props) => props.theme.spacing[6]}px;\n  max-width: 610px;\n  width: 100%;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst StyledTitle = styled.h1`\n  color: ${(props) => props.theme.color.grey[100]};\n  font-size: 36px;\n  font-weight: 700;\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledSubtitle = styled.h3`\n  color: ${(props) => props.theme.color.grey[400]};\n  font-size: 18px;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`;\n\nexport default PageHeader;\n","import React, { useContext, useMemo } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\ninterface ButtonProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  href?: string;\n  onClick?: () => void;\n  size?: 'sm' | 'md' | 'lg';\n  text?: string;\n  to?: string;\n  variant?: 'default' | 'secondary' | 'tertiary';\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to, variant }) => {\n  const { color, spacing } = useContext(ThemeContext);\n\n  let buttonColor: string;\n  switch (variant) {\n    case 'secondary':\n      buttonColor = color.teal[200];\n      break;\n    case 'tertiary':\n      buttonColor = color.gray[400]\n      break;\n    case 'default':\n    default:\n      buttonColor = color.primary.main;\n  }\n\n  let boxShadow: string;\n  let buttonSize: number;\n  let buttonPadding: number;\n  let fontSize: number;\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3];\n      buttonSize = 36;\n      fontSize = 14;\n      break;\n    case 'lg':\n      buttonPadding = spacing[4];\n      buttonSize = 72;\n      fontSize = 16;\n      break;\n    case 'md':\n    default:\n      buttonPadding = spacing[4];\n      buttonSize = 56;\n      fontSize = 16;\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>;\n    } else if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      );\n    } else {\n      return text;\n    }\n  }, [href, text, to]);\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  );\n};\n\ninterface StyledButtonProps {\n  boxShadow: string;\n  color: string;\n  disabled?: boolean;\n  fontSize: number;\n  padding: number;\n  size: number;\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[900]};\n  border: 0;\n  border-radius: 12px;\n  box-shadow: ${(props) => props.boxShadow};\n  color: ${(props) => (!props.disabled ? props.color : `${props.color}55`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  &:hover {\n    background-color: ${(props) => props.color};\n    color: ${(props) => props.theme.color.grey[900]};\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default Button;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport Button from '../../../components/Button';\nimport Modal, { ModalProps } from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\nimport { BigNumber } from 'ethers';\nimport Label from '../../../components/Label';\n\ninterface ExchangeModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  title: string;\n  description: string;\n  action: string;\n  tokenName: string;\n}\n\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\n  max,\n  title,\n  description,\n  onConfirm,\n  onDismiss,\n  action,\n  tokenName,\n}) => {\n  const [val, setVal] = useState('');\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={title} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <Label text={description} />\n      <ModalActions>\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text={action} onClick={() => onConfirm(val)} />\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default ExchangeModal;\n","import { useCallback } from 'react';\nimport { useAddPopup } from '../state/application/hooks';\n\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\n\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\n      promise.catch((err) => {\n        if (err.message.includes('User denied')) {\n          // User denied transaction signature on MetaMask.\n          return;\n        }\n        console.error(`Uncaught exception: ${err.stack}`);\n        addPopup({ error: { message, stack: err.stack } });\n      });\n    },\n    [addPopup],\n  );\n}\n\nexport default useCatchError;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Card } from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport useTombFinance from '../../../hooks/useTombFinance';\nimport Label from '../../../components/Label';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport useModal from '../../../hooks/useModal';\nimport ExchangeModal from './ExchangeModal';\nimport ERC20 from '../../../tomb-finance/ERC20';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useCatchError from '../../../hooks/useCatchError';\n\ninterface ExchangeCardProps {\n  action: string;\n  fromToken: ERC20;\n  fromTokenName: string;\n  toToken: ERC20;\n  toTokenName: string;\n  priceDesc: string;\n  onExchange: (amount: string) => void;\n  disabled?: boolean;\n  disabledDescription?: string;\n}\n\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\n  action,\n  fromToken,\n  fromTokenName,\n  toToken,\n  toTokenName,\n  priceDesc,\n  onExchange,\n  disabled = false,\n  disabledDescription,\n}) => {\n  const catchError = useCatchError();\n  const {\n    contracts: { Treasury },\n  } = useTombFinance();\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\n\n  const balance = useTokenBalance(fromToken);\n  const [onPresent, onDismiss] = useModal(\n    <ExchangeModal\n      title={action}\n      description={priceDesc}\n      max={balance}\n      onConfirm={(value) => {\n        onExchange(value);\n        onDismiss();\n      }}\n      action={action}\n      tokenName={fromTokenName}\n    />,\n  );\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardTitle>{`${action} ${toTokenName}`}</StyledCardTitle>\n          <StyledExchanger>\n            <StyledToken>\n              <StyledCardIcon style={{ background: 'transparent' }}>\n                <TokenSymbol symbol={fromToken.symbol} size={54}/>\n              </StyledCardIcon>\n              <Label text={fromTokenName} variant=\"normal\" />\n            </StyledToken>\n            <StyledExchangeArrow>\n              <FontAwesomeIcon icon={faArrowRight} />\n            </StyledExchangeArrow>\n            <StyledToken>\n              <StyledCardIcon style={{ background: 'transparent' }}>\n                <TokenSymbol symbol={toToken.symbol} size={54} />\n              </StyledCardIcon>\n              <Label text={toTokenName} variant=\"normal\" />\n            </StyledToken>\n          </StyledExchanger>\n          <StyledDesc>{priceDesc}</StyledDesc>\n          <StyledCardActions>\n            {approveStatus !== ApprovalState.APPROVED && !disabled ? (\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\n                onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\n              >\n                {`Approve ${fromTokenName}`}\n              </Button>\n            ) : (\n              <Button color=\"primary\" variant=\"contained\" onClick={onPresent} disabled={disabled}>\n                {disabledDescription || action}\n              </Button>\n            )}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardTitle = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  height: 64px;\n  justify-content: center;\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\n`;\n\nconst StyledCardIcon = styled.div`\n  background-color: ${(props) => props.theme.color.grey[900]};\n  width: 72px;\n  height: 72px;\n  border-radius: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst StyledExchanger = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\n`;\n\nconst StyledExchangeArrow = styled.div`\n  font-size: 20px;\n  padding-left: ${(props) => props.theme.spacing[3]}px;\n  padding-right: ${(props) => props.theme.spacing[3]}px;\n  padding-bottom: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledToken = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n`;\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n  width: 100%;\n`;\n\nconst StyledDesc = styled.span``;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default ExchangeCard;\n","import { useCallback, useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport config from '../config';\nimport { BigNumber } from 'ethers';\n\nconst useCashPriceInLastTWAP = () => {\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n\n  const fetchCashPrice = useCallback(async () => {\n    setPrice(await tombFinance.getTombPriceInLastTWAP());\n  }, [tombFinance]);\n\n  useEffect(() => {\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch TOMB price: ${err.stack}`));\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [setPrice, tombFinance, fetchCashPrice]);\n\n  return price;\n};\n\nexport default useCashPriceInLastTWAP;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Card } from '@material-ui/core';\n\ninterface ExchangeStatProps {\n  tokenName: string;\n  description: string;\n  price: string;\n}\n\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({ tokenName, description, price }) => {\n  return (\n    <Card>\n      <StyledCardContentInner>\n        <StyledCardTitle>{`💰 ${tokenName} = ${price} FTM`}</StyledCardTitle>\n        <StyledDesc>{description}</StyledDesc>\n      </StyledCardContentInner>\n    </Card>\n  );\n};\n\nconst StyledCardTitle = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst StyledDesc = styled.span`\n  //color: ${(props) => props.theme.color.grey[300]};\n  text-align: center;\n`;\n\nconst StyledCardContentInner = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: ${(props) => props.theme.spacing[2]}px;\n`;\n\nexport default ExchangeStat;\n","import { useCallback, useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport ERC20 from '../tomb-finance/ERC20';\nimport useTombFinance from './useTombFinance';\nimport config from '../config';\n\nconst useBondsPurchasable = () => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n\n  useEffect(() => {\n    async function fetchBondsPurchasable() {\n        try {\n            setBalance(await tombFinance.getBondsPurchasable());\n        }\n        catch(err) {\n            console.error(err);\n        }\n      }\n    fetchBondsPurchasable();\n  }, [setBalance, tombFinance]);\n\n  return balance;\n};\n\nexport default useBondsPurchasable;\n","import { BigNumber } from 'ethers';\n\nexport const DECIMALS_18 = BigNumber.from(10).pow(18);\n\nexport const BOND_REDEEM_PRICE = 1.01;\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\n","import React, { useCallback, useMemo } from 'react';\nimport Page from '../../components/Page';\nimport PitImage from '../../assets/img/pit.png';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\nimport { Typography } from '@material-ui/core';\n\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background-color: var(--black);\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='32' viewBox='0 0 16 32'%3E%3Cg fill='%231D1E1F' fill-opacity='0.4'%3E%3Cpath fill-rule='evenodd' d='M0 24h4v2H0v-2zm0 4h6v2H0v-2zm0-8h2v2H0v-2zM0 0h4v2H0V0zm0 4h2v2H0V4zm16 20h-6v2h6v-2zm0 4H8v2h8v-2zm0-8h-4v2h4v-2zm0-20h-6v2h6V0zm0 4h-4v2h4V4zm-2 12h2v2h-2v-2zm0-8h2v2h-2V8zM2 8h10v2H2V8zm0 8h10v2H2v-2zm-2-4h14v2H0v-2zm4-8h6v2H4V4zm0 16h6v2H4v-2zM6 0h2v2H6V0zm0 24h2v2H6v-2z'/%3E%3C/g%3E%3C/svg%3E\");\n}\n\n* {\n    background: transparent;\n    border-radius: 0 !important;\n    box-shadow: none !important;\n}\n`;\n\nconst Pit: React.FC = () => {\n  const { path } = useRouteMatch();\n  const { account } = useWallet();\n  const tombFinance = useTombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n  const cashPrice = useCashPriceInLastTWAP();\n  const bondsPurchasable = useBondsPurchasable();\n\n  const bondBalance = useTokenBalance(tombFinance?.TBOND);\n\n  const handleBuyBonds = useCallback(\n    async (amount: string) => {\n      const tx = await tombFinance.buyBonds(amount);\n      addTransaction(tx, {\n        summary: `Buy ${Number(amount).toFixed(2)} TBOND with ${amount} TOMB`,\n      });\n    },\n    [tombFinance, addTransaction],\n  );\n\n  const handleRedeemBonds = useCallback(\n    async (amount: string) => {\n      const tx = await tombFinance.redeemBonds(amount);\n      addTransaction(tx, { summary: `Redeem ${amount} TBOND` });\n    },\n    [tombFinance, addTransaction],\n  );\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\n\n  return (\n    <Switch>\n      <Page>\n        <BackgroundImage />\n        {!!account ? (\n          <>\n            <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n              BONDs\n            </Typography>\n            <Route exact path={path}>\n              <PageHeader icon={'🏦'} subtitle=\"Earn premiums upon redemption\" />\n            </Route>\n            <StyledBond>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Purchase\"\n                  fromToken={tombFinance.TOMB}\n                  fromTokenName=\"BETH\"\n                  toToken={tombFinance.TBOND}\n                  toTokenName=\"BOND\"\n                  priceDesc={\n                    !isBondPurchasable\n                      ? '3OMB is over peg'\n                      : getDisplayBalance(bondsPurchasable, 18, 4) + ' BOND available for purchase'\n                  }\n                  onExchange={handleBuyBonds}\n                  disabled={!bondStat || isBondRedeemable}\n                />\n              </StyledCardWrapper>\n              <StyledStatsWrapper>\n                <ExchangeStat\n                  tokenName=\"BETH\"\n                  description=\"Last-Hour TWAP Price\"\n                  price={getDisplayBalance(cashPrice, 18, 4)}\n                />\n                <Spacer size=\"md\" />\n                <ExchangeStat\n                  tokenName=\"BOND\"\n                  description=\"Current Price: (3OMB)^2\"\n                  price={Number(bondStat?.tokenInFtm).toFixed(2) || '-'}\n                />\n              </StyledStatsWrapper>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Redeem\"\n                  fromToken={tombFinance.TBOND}\n                  fromTokenName=\"BOND\"\n                  toToken={tombFinance.TOMB}\n                  toTokenName=\"BETH\"\n                  priceDesc={`${getDisplayBalance(bondBalance)} BOND Available in wallet`}\n                  onExchange={handleRedeemBonds}\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\n                  disabledDescription={!isBondRedeemable ? `Enabled when 3OMB > ${BOND_REDEEM_PRICE}FTM` : null}\n                />\n              </StyledCardWrapper>\n            </StyledBond>\n          </>\n        ) : (\n          <UnlockWallet />\n        )}\n      </Page>\n    </Switch>\n  );\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  background: transparent;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  background: transparent;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n  background: transparent;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\n\nexport default Pit;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport AccountButton from '../Nav/AccountButton';\n\nconst UnlockWallet = () => {\n  return (\n    <Box style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\n      <AccountButton />\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\n    </Box>\n  );\n};\n\nexport default UnlockWallet;\n","import { BigNumber, ethers } from 'ethers';\nimport { useCallback, useMemo } from 'react';\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport ERC20 from '../tomb-finance/ERC20';\n\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\n  const pendingApproval = useHasPendingApproval(token.address, spender);\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [currentAllowance, pendingApproval]);\n\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    const response = await token.approve(spender, APPROVE_AMOUNT);\n    addTransaction(response, {\n      summary: `Approve ${token.symbol}`,\n      approval: {\n        tokenAddress: token.address,\n        spender: spender,\n      },\n    });\n  }, [approvalState, token, spender, addTransaction]);\n\n  return [approvalState, approve];\n}\n\nexport default useApprove;\n","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext);\n\n  let s: number;\n  switch (size) {\n    case 'lg':\n      s = spacing[6];\n      break;\n    case 'sm':\n      s = spacing[2];\n      break;\n    case 'md':\n    default:\n      s = spacing[4];\n  }\n\n  return <StyledSpacer size={s} />;\n};\n\ninterface StyledSpacerProps {\n  size: number;\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`;\n\nexport default Spacer;\n","import { useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport { TokenStat } from '../tomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useBondStats = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const { slowRefresh } = useRefresh();\n  const tombFinance = useTombFinance();\n\n  useEffect(() => {\n    async function fetchBondPrice() {\n      try {\n        setStat(await tombFinance.getBondStat());\n      }\n      catch(err){\n        console.error(err);\n      }\n    }\n    fetchBondPrice();\n  }, [setStat, tombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useBondStats;\n"],"sourceRoot":""}