{"version":3,"sources":["components/Icon/Icon.tsx","components/icons/AddIcon.tsx","components/icons/RemoveIcon.tsx","components/IconButton/IconButton.tsx","hooks/masonry/useClaimRewardTimerMasonry.ts","hooks/masonry/useClaimRewardCheck.ts","views/Masonry/components/ProgressCountdown.tsx","hooks/useHarvestFromMasonry.ts","hooks/useEarningsOnMasonry.ts","views/Masonry/components/Harvest.tsx","hooks/masonry/useWithdrawCheck.ts","views/Masonry/components/DepositModal.tsx","views/Masonry/components/WithdrawModal.tsx","hooks/useStakedBalanceOnMasonry.ts","hooks/masonry/useUnstakeTimerMasonry.ts","hooks/useStakeToMasonry.ts","hooks/useWithdrawFromMasonry.ts","views/Masonry/components/Stake.tsx","hooks/useRedeemOnMasonry.ts","hooks/useCurrentEpoch.ts","hooks/useFetchMasonryAPR.ts","hooks/useTreasuryAllocationTimes.ts","hooks/useTotalStakedOnMasonry.ts","views/Masonry/Masonry.js","hooks/useHandleTransactionReceipt.ts","components/UnlockWallet/UnlockWallet.tsx","components/CardIcon/CardIcon.tsx","hooks/useApprove.ts","hooks/useTombStats.ts","hooks/useRebateTreasury.js","components/Spacer/Spacer.tsx","components/Value/Value.tsx","hooks/useStakedTokenPriceInDollars.ts","hooks/useCashPriceInEstimatedTWAP.ts"],"names":["StyledIcon","styled","div","Icon","children","AddIcon","color","themeColor","useContext","ThemeContext","height","viewBox","width","d","fill","grey","RemoveIcon","StyledButton","button","props","theme","disabled","primary","main","undefined","StyledLink","Link","spacing","IconButton","onClick","to","useClaimRewardTimerMasonry","useState","from","Date","time","setTime","tombFinance","useTombFinance","useEffect","getUserClaimRewardTime","then","useClaimRewardCheck","slowRefresh","useRefresh","canClaimReward","setCanClaimReward","isUnlocked","a","canUserClaimRewardFromMasonry","console","error","canUserClaimReward","StyledCountdown","p","StyledProgressOuter","StyledProgress","progress","StyledCardContentInner","ProgressCountdown","base","deadline","hideBar","percentage","description","now","getTime","key","date","renderer","countdownProps","days","hours","minutes","seconds","h","String","m","s","padStart","useHarvestFromMasonry","handleTransactionReceipt","useHandleTransactionReceipt","onReward","useCallback","harvestCashFromMasonry","useEarningsOnMasonry","BigNumber","balance","setBalance","getEarningsOnMasonry","fetchBalance","StyledCardHeader","StyledCardActions","Harvest","tombStats","useTombStats","earnings","tokenPriceInDollars","useMemo","Number","priceInDollars","toFixed","earnedInDollars","getDisplayBalance","Box","Card","CardContent","CardIcon","TokenSymbol","symbol","Value","value","Label","text","Button","variant","eq","mt","style","Typography","textAlign","useWithdrawCheck","canWithdraw","setCanWithdraw","canUserUnstakeFromMasonry","canUserWithdraw","DepositModal","max","onConfirm","onDismiss","tokenName","val","setVal","fullBalance","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","Modal","ModalTitle","TokenInput","onSelectMax","onChange","ModalActions","WithdrawModal","useStakedBalanceOnMasonry","getStakedSharesOnMasonry","useUnstakeTimerMasonry","getUserUnstakeTime","useStakeToMasonry","onStake","amount","stakeShareToMasonry","useWithdrawFromMasonry","onWithdraw","withdrawShareFromMasonry","StyledActionSpacer","Stake","useApprove","TSHARE","contracts","Masonry","address","approveStatus","approve","tokenBalance","useTokenBalance","stakedBalance","stakedTokenPriceInDollars","useStakedTokenPriceInDollars","toString","canWithdrawFromMasonry","useModal","onDismissDeposit","onPresentDeposit","onDismissWithdraw","onPresentWithdraw","ApprovalState","APPROVED","NOT_APPROVED","marginTop","useRedeemOnMasonry","onRedeem","alertDesc","exitFromMasonry","useCurrentEpoch","currentEpoch","setCurrentEpoch","getCurrentEpoch","fetchCurrentEpoch","useFetchMasonryAPR","apr","setApr","getMasonryAPR","fetchMasonryAPR","useTreasuryAllocationTimes","getTreasuryNextAllocationTime","useTotalStakedOnMasonry","totalStaked","setTotalStaked","getTotalStakedInMasonry","fetchTotalStaked","BackgroundImage","createGlobalStyle","useStyles","makeStyles","gridItem","breakpoints","up","StyledBoardroom","StyledCardsWrapper","StyledCardWrapper","classes","account","useWallet","cashStat","useCashPriceInEstimatedTWAP","masonryAPR","rebateStats","useRebateTreasury","Page","align","gutterBottom","Grid","container","justify","item","xs","md","lg","className","moment","toDate","tombPrice","Alert","severity","Spacer","UnlockWallet","addTransaction","useTransactionAdder","addPopup","useAddPopup","promise","summary","tx","catch","err","message","includes","toLowerCase","slice","stack","position","top","left","transform","AccountButton","StyledCardIcon","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","token","spender","pendingApproval","useHasPendingApproval","currentAllowance","useAllowance","approvalState","lt","PENDING","UNKNOWN","response","approval","tokenAddress","stat","setStat","fastRefresh","getTombStat","fetchTombPrice","web3","Web3","RebateTreasury","eth","Contract","Threeomb","assetList","setTombPrice","tombAvailable","setTombAvailable","bondPremium","setBondPremium","bondVesting","setBondVesting","map","asset","params","multiplier","isLP","price","assets","setAssets","update","Promise","all","methods","getTombPrice","call","balanceOf","_address","totalVested","getBondPremium","getTokenPrice","tombBalance","vestedTomb","assetParams","assetPrices","utils","fromWei","length","push","interval","setInterval","clearInterval","StyledSpacer","size","StyledValue","stakedTokenName","stakedToken","setStakedTokenPriceInDollars","getDepositTokenPriceInDollars","refreshStakedTokenPriceInDollars","config","refreshInterval","getTombStatInEstimatedTWAP","fetchCashPrice"],"mappings":"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","file":"static/js/14.ac8af4e0.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport interface IconProps {\n  color?: string;\n  children?: string;\n}\n\nconst Icon: React.FC = ({ children }) => <StyledIcon>{children}</StyledIcon>;\n\nconst StyledIcon = styled.div``;\n\nexport default Icon;\n","import React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\n\nimport Icon, { IconProps } from '../Icon';\n\nconst AddIcon: React.FC<IconProps> = ({ color }) => {\n  const { color: themeColor } = useContext(ThemeContext);\n  return (\n    <Icon>\n      <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" fill={color ? color : themeColor.grey[400]} />\n      </svg>\n    </Icon>\n  );\n};\n\nexport default AddIcon;\n","import React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\n\nimport Icon, { IconProps } from '../Icon';\n\nconst RemoveIcon: React.FC<IconProps> = ({ color }) => {\n  const { color: themeColor } = useContext(ThemeContext);\n  return (\n    <Icon>\n      <svg viewBox=\"0 0 24 24\" fill={color ? color : themeColor.grey[400]} width=\"18px\" height=\"18px\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 13H5v-2h14v2z\" />\n      </svg>\n    </Icon>\n  );\n};\n\nexport default RemoveIcon;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\ninterface IconButtonProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  onClick?: () => void;\n  to?: string;\n}\n\nconst IconButton: React.FC<IconButtonProps> = ({ children, disabled, onClick, to }) => {\n  return (\n    <StyledButton disabled={disabled} onClick={onClick}>\n      {!!to ? <StyledLink to={to}>{children}</StyledLink> : children}\n    </StyledButton>\n  );\n};\n\ninterface StyledButtonProps {\n  disabled?: boolean;\n}\n/*\n  box-shadow: 6px 6px 12px ${props => props.theme.color.grey[600]},\n    -12px -12px 24px ${props => props.theme.color.grey[800]}aa;\n */\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  // background-color: ${(props) => props.theme.color.grey[!props.disabled ? 700 : 900]};\n  background-color: ${(props) => (!props.disabled ? '#406ff5' : props.theme.color.grey[900])};\n  border: 0;\n  border-radius: 10px !important;\n  color: ${(props) => (!props.disabled ? props.theme.color.primary.main : props.theme.color.grey[500])};\n  cursor: pointer;\n  display: flex;\n  font-weight: 700;\n  height: 56px;\n  justify-content: center;\n  letter-spacing: 1px;\n  outline: none;\n  padding: 0;\n  margin: 0;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  text-transform: uppercase;\n  width: 56px;\n  &:hover {\n    // background-color: ${(props) => props.theme.color.grey[800]};\n    background-color: #7c9cf6;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default IconButton;\n","import { useEffect, useState } from 'react';\nimport useTombFinance from '../useTombFinance';\nimport { AllocationTime } from '../../tomb-finance/types';\n\nconst useClaimRewardTimerMasonry = () => {\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const tombFinance = useTombFinance();\n\n  useEffect(() => {\n    if (tombFinance) {\n      tombFinance.getUserClaimRewardTime().then(setTime);\n    }\n  }, [tombFinance]);\n  return time;\n};\n\nexport default useClaimRewardTimerMasonry;\n","import { useEffect, useState } from 'react';\nimport useRefresh from '../useRefresh';\nimport useTombFinance from './../useTombFinance';\n\nconst useClaimRewardCheck = () => {\n  const  { slowRefresh } = useRefresh();\n  const [canClaimReward, setCanClaimReward] = useState(false);\n  const tombFinance = useTombFinance();\n  const isUnlocked = tombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function canUserClaimReward() {\n      try {\n        setCanClaimReward(await tombFinance.canUserClaimRewardFromMasonry());\n      } catch(err){\n        console.error(err);\n      };\n    }\n    if (isUnlocked) {\n      canUserClaimReward();\n    }\n  }, [isUnlocked, slowRefresh, tombFinance]);\n\n  return canClaimReward;\n};\n\nexport default useClaimRewardCheck;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Countdown, { CountdownRenderProps } from 'react-countdown';\n\ninterface ProgressCountdownProps {\n  base: Date;\n  deadline: Date;\n  hideBar?: boolean;\n  description: string;\n}\n\nconst ProgressCountdown: React.FC<ProgressCountdownProps> = ({ base, deadline, hideBar, description }) => {\n  const percentage =\n    Date.now() >= deadline.getTime()\n      ? 100\n      : ((Date.now() - base.getTime()) / (deadline.getTime() - base.getTime())) * 100;\n\n  const countdownRenderer = (countdownProps: CountdownRenderProps) => {\n    const { days, hours, minutes, seconds } = countdownProps;\n    const h = String(days * 24 + hours);\n    const m = String(minutes);\n    const s = String(seconds);\n    return (\n      <StyledCountdown>\n        {h.padStart(2, '0')}:{m.padStart(2, '0')}:{s.padStart(2, '0')}\n      </StyledCountdown>\n    );\n  };\n  return (\n    // <Card>\n    <StyledCardContentInner>\n      {/* <StyledDesc>{description}</StyledDesc> */}\n      <Countdown key={new Date().getTime()} date={deadline} renderer={countdownRenderer} />\n      {hideBar ? (\n        ''\n      ) : (\n        <StyledProgressOuter>\n          <StyledProgress progress={percentage} />\n        </StyledProgressOuter>\n      )}\n    </StyledCardContentInner>\n    // </Card>\n  );\n};\n\nconst StyledCountdown = styled.p`\n  // font-size: 14px;\n  font-weight: 700;\n  // color: ${(props) => props.theme.color.grey[100]};\n  margin: 0 0 6px 0;\n`;\n\nconst StyledProgressOuter = styled.div`\n  width: 100%;\n  height: 8px;\n  border-radius: 3px;\n  background: ${(props) => props.theme.color.grey[700]};\n`;\n\nconst StyledProgress = styled.div<{ progress: number }>`\n  width: ${(props) => props.progress}%;\n  height: 100%;\n  border-radius: 3px;\n  background: ${(props) => props.theme.color.grey[100]};\n`;\n\nconst StyledCardContentInner = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  // padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ProgressCountdown;\n","import { useCallback } from 'react';\nimport useTombFinance from './useTombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useHarvestFromMasonry = () => {\n  const tombFinance = useTombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleReward = useCallback(() => {\n    handleTransactionReceipt(tombFinance.harvestCashFromMasonry(), 'Claimed from the Boardroom ');\n  }, [tombFinance, handleTransactionReceipt]);\n\n  return { onReward: handleReward };\n};\n\nexport default useHarvestFromMasonry;\n","import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useTombFinance from './useTombFinance';\nimport useRefresh from './useRefresh';\n\nconst useEarningsOnMasonry = () => {\n  const { slowRefresh } = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n  const isUnlocked = tombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await tombFinance.getEarningsOnMasonry());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [isUnlocked, tombFinance, slowRefresh]);\n\n  return balance;\n};\n\nexport default useEarningsOnMasonry;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core';\n\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport CardIcon from '../../../components/CardIcon';\nimport useClaimRewardTimerMasonry from '../../../hooks/masonry/useClaimRewardTimerMasonry';\nimport useClaimRewardCheck from '../../../hooks/masonry/useClaimRewardCheck';\nimport ProgressCountdown from './../components/ProgressCountdown';\nimport useHarvestFromMasonry from '../../../hooks/useHarvestFromMasonry';\nimport useEarningsOnMasonry from '../../../hooks/useEarningsOnMasonry';\nimport useTombStats from '../../../hooks/useTombStats';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nconst Harvest: React.FC = () => {\n  const tombStats = useTombStats();\n  const { onReward } = useHarvestFromMasonry();\n  const earnings = useEarningsOnMasonry();\n  const canClaimReward = useClaimRewardCheck();\n\n  const tokenPriceInDollars = useMemo(\n    () => (tombStats ? Number(tombStats.priceInDollars).toFixed(2) : null),\n    [tombStats],\n  );\n\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n\n  const { from, to } = useClaimRewardTimerMasonry();\n\n  return (\n    <Box>\n      <Card>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <CardIcon>\n                <TokenSymbol symbol=\"BETH\" />\n              </CardIcon>\n              <Value value={getDisplayBalance(earnings)} />\n              <Label text={`≈ $${earnedInDollars}`} color=\"#82a1fa\" />\n              <Label text=\"BETH Minted\" color=\"#82a1fa\" />\n            </StyledCardHeader>\n            <StyledCardActions>\n              <Button\n                onClick={onReward}\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={earnings.eq(0) || !canClaimReward}\n              >\n                Claim Reward\n              </Button>\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      <Box mt={2} style={{ color: '#FFF' }}>\n        {canClaimReward ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{ textAlign: 'center' }}>Claim possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Claim available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n","import { useEffect, useState } from 'react';\nimport useTombFinance from './../useTombFinance';\nimport useRefresh from '../useRefresh';\n\nconst useWithdrawCheck = () => {\n  const [canWithdraw, setCanWithdraw] = useState(false);\n  const tombFinance = useTombFinance();\n  const { slowRefresh } = useRefresh();\n  const isUnlocked = tombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function canUserWithdraw() {\n      try {\n        setCanWithdraw(await tombFinance.canUserUnstakeFromMasonry());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (isUnlocked) {\n      canUserWithdraw();\n    }\n  }, [isUnlocked, tombFinance, slowRefresh]);\n\n  return canWithdraw;\n};\n\nexport default useWithdrawCheck;\n","import React, { useCallback, useMemo, useState } from 'react';\n\nimport { Button } from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, { ModalProps } from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\n\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\nimport { BigNumber } from 'ethers';\n\ninterface DepositModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('');\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, tokenName === 'USDC' ? 6 : 18);\n  }, [max, tokenName]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={`Deposit ${tokenName}`} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\n          Confirm\n        </Button>\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default DepositModal;\n","import React, { useCallback, useMemo, useState } from 'react';\n\nimport { Button } from '@material-ui/core';\nimport Modal, { ModalProps } from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\n\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\nimport { BigNumber } from 'ethers';\n\ninterface WithdrawModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('');\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={`Withdraw ${tokenName}`} />\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\n          Confirm\n        </Button>\n        {/* <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} /> */}\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default WithdrawModal;\n","import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useTombFinance from './useTombFinance';\nimport useRefresh from './useRefresh';\n\nconst useStakedBalanceOnMasonry = () => {\n  const { slowRefresh } = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n  const isUnlocked = tombFinance?.isUnlocked;\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await tombFinance.getStakedSharesOnMasonry());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [slowRefresh, isUnlocked, tombFinance]);\n  return balance;\n};\n\nexport default useStakedBalanceOnMasonry;\n","import { useEffect, useState } from 'react';\nimport useTombFinance from './../useTombFinance';\nimport { AllocationTime } from '../../tomb-finance/types';\n\nconst useUnstakeTimerMasonry = () => {\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const tombFinance = useTombFinance();\n\n  useEffect(() => {\n    if (tombFinance) {\n      tombFinance.getUserUnstakeTime().then(setTime);\n    }\n  }, [tombFinance]);\n  return time;\n};\n\nexport default useUnstakeTimerMasonry;\n","import { useCallback } from 'react';\nimport useTombFinance from './useTombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useStakeToMasonry = () => {\n  const tombFinance = useTombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleStake = useCallback(\n    (amount: string) => {\n      handleTransactionReceipt(tombFinance.stakeShareToMasonry(amount), `Stake ${amount} Shares to the Boardroom `);\n    },\n    [tombFinance, handleTransactionReceipt],\n  );\n  return { onStake: handleStake };\n};\n\nexport default useStakeToMasonry;\n","import { useCallback } from 'react';\nimport useTombFinance from './useTombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useWithdrawFromMasonry = () => {\n  const tombFinance = useTombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleWithdraw = useCallback(\n    (amount: string) => {\n      handleTransactionReceipt(\n        tombFinance.withdrawShareFromMasonry(amount),\n        `Withdrew ${amount} Shares from the Boardroom `,\n      );\n    },\n    [tombFinance, handleTransactionReceipt],\n  );\n  return { onWithdraw: handleWithdraw };\n};\n\nexport default useWithdrawFromMasonry;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\n\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdrawCheck from '../../../hooks/masonry/useWithdrawCheck';\n\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useTombFinance from '../../../hooks/useTombFinance';\nimport ProgressCountdown from './../components/ProgressCountdown';\nimport useStakedBalanceOnMasonry from '../../../hooks/useStakedBalanceOnMasonry';\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\nimport useUnstakeTimerMasonry from '../../../hooks/masonry/useUnstakeTimerMasonry';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useStakeToMasonry from '../../../hooks/useStakeToMasonry';\nimport useWithdrawFromMasonry from '../../../hooks/useWithdrawFromMasonry';\n\nconst Stake: React.FC = () => {\n  const tombFinance = useTombFinance();\n  const [approveStatus, approve] = useApprove(tombFinance.TSHARE, tombFinance.contracts.Masonry.address);\n\n  const tokenBalance = useTokenBalance(tombFinance.TSHARE);\n  const stakedBalance = useStakedBalanceOnMasonry();\n  const { from, to } = useUnstakeTimerMasonry();\n\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars('TSHARE', tombFinance.TSHARE);\n  const tokenPriceInDollars = useMemo(\n    () =>\n      stakedTokenPriceInDollars\n        ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString()\n        : null,\n    [stakedTokenPriceInDollars, stakedBalance],\n  );\n  // const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n  const { onStake } = useStakeToMasonry();\n  const { onWithdraw } = useWithdrawFromMasonry();\n  const canWithdrawFromMasonry = useWithdrawCheck();\n\n  const [onPresentDeposit, onDismissDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={(value) => {\n        onStake(value);\n        onDismissDeposit();\n      }}\n      tokenName={'3Shares'}\n    />,\n  );\n\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={(value) => {\n        onWithdraw(value);\n        onDismissWithdraw();\n      }}\n      tokenName={'3Shares'}\n    />,\n  );\n\n  return (\n    <Box>\n      <Card>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <CardIcon>\n                <TokenSymbol symbol=\"MUSH\" />\n              </CardIcon>\n              <Value value={getDisplayBalance(stakedBalance)} />\n              <Label text={`≈ $${tokenPriceInDollars}`} color=\"#9cb3f7\" />\n              <Label text={'Shares Staked'} color=\"#9cb3f7\" />\n            </StyledCardHeader>\n            <StyledCardActions>\n              {approveStatus !== ApprovalState.APPROVED ? (\n                <Button\n                  disabled={approveStatus !== ApprovalState.NOT_APPROVED}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  style={{ marginTop: '20px' }}\n                  onClick={approve}\n                >\n                  Approve Shares\n                </Button>\n              ) : (\n                <>\n                  <IconButton disabled={!canWithdrawFromMasonry} onClick={onPresentWithdraw}>\n                    <RemoveIcon />\n                  </IconButton>\n                  <StyledActionSpacer />\n                  <IconButton onClick={onPresentDeposit}>\n                    <AddIcon />\n                  </IconButton>\n                </>\n              )}\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      <Box mt={2} style={{ color: '#FFF' }}>\n        {canWithdrawFromMasonry ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{ textAlign: 'center' }}>Withdraw possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Withdraw available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n","import { useCallback } from 'react';\nimport useTombFinance from './useTombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useRedeemOnMasonry = (description?: string) => {\n  const tombFinance = useTombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleRedeem = useCallback(() => {\n    const alertDesc = description || 'Withdrew Seigniorage Share from the Boardroom ';\n    handleTransactionReceipt(tombFinance.exitFromMasonry(), alertDesc);\n  }, [tombFinance, description, handleTransactionReceipt]);\n  return { onRedeem: handleRedeem };\n};\n\nexport default useRedeemOnMasonry;\n","import { useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport { BigNumber } from 'ethers';\nimport useRefresh from './useRefresh';\n\nconst useCurrentEpoch = () => {\n  const [currentEpoch, setCurrentEpoch] = useState<BigNumber>(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n  const { slowRefresh } = useRefresh(); \n\n  useEffect(() => {\n    async function fetchCurrentEpoch () {\n      try {\n        setCurrentEpoch(await tombFinance.getCurrentEpoch());\n      } catch(err) {\n        console.error(err);\n      }\n    }\n    fetchCurrentEpoch();\n  }, [setCurrentEpoch, tombFinance, slowRefresh]);\n\n  return currentEpoch;\n};\n\nexport default useCurrentEpoch;\n","import { useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport useRefresh from './useRefresh';\n\nconst useFetchMasonryAPR = () => {\n  const [apr, setApr] = useState<number>(0);\n  const tombFinance = useTombFinance();\n  const { slowRefresh } = useRefresh(); \n\n  useEffect(() => {\n    async function fetchMasonryAPR() {\n      try {\n        setApr(await tombFinance.getMasonryAPR());\n      } catch(err){\n        console.error(err);\n      }\n    }\n   fetchMasonryAPR();\n  }, [setApr, tombFinance, slowRefresh]);\n\n  return apr;\n};\n\nexport default useFetchMasonryAPR;\n","import { useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport { AllocationTime } from '../tomb-finance/types';\nimport useRefresh from './useRefresh';\n\n\nconst useTreasuryAllocationTimes = () => {\n  const { slowRefresh } = useRefresh();\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const tombFinance = useTombFinance();\n  useEffect(() => {\n    if (tombFinance) {\n      tombFinance.getTreasuryNextAllocationTime().then(setTime);\n    }\n  }, [tombFinance, slowRefresh]);\n  return time;\n};\n\nexport default useTreasuryAllocationTimes;\n","import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport useTombFinance from './useTombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalStakedOnMasonry = () => {\n  const [totalStaked, setTotalStaked] = useState(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n  const { slowRefresh } = useRefresh();\n  const isUnlocked = tombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function fetchTotalStaked() {\n      try {\n        setTotalStaked(await tombFinance.getTotalStakedInMasonry());\n      } catch(err) {\n        console.error(err);\n      }\n    }\n    if (isUnlocked) {\n     fetchTotalStaked();\n    }\n  }, [isUnlocked, slowRefresh, tombFinance]);\n\n  return totalStaked;\n};\n\nexport default useTotalStakedOnMasonry;\n","import React, { useMemo } from 'react';\nimport { useWallet } from 'use-wallet';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useRebateTreasury from \"../../hooks/useRebateTreasury\"\n\nimport { Box, Card, CardContent, Button, Typography, Grid } from '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab';\n\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Page from '../../components/Page';\n\nimport useRedeemOnMasonry from '../../hooks/useRedeemOnMasonry';\nimport useStakedBalanceOnMasonry from '../../hooks/useStakedBalanceOnMasonry';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport useCurrentEpoch from '../../hooks/useCurrentEpoch';\nimport useFetchMasonryAPR from '../../hooks/useFetchMasonryAPR';\n\nimport useCashPriceInEstimatedTWAP from '../../hooks/useCashPriceInEstimatedTWAP';\nimport useTreasuryAllocationTimes from '../../hooks/useTreasuryAllocationTimes';\nimport useTotalStakedOnMasonry from '../../hooks/useTotalStakedOnMasonry';\nimport useClaimRewardCheck from '../../hooks/masonry/useClaimRewardCheck';\nimport useWithdrawCheck from '../../hooks/masonry/useWithdrawCheck';\nimport ProgressCountdown from './components/ProgressCountdown';\n// import MasonryImage from '../../assets/img/masonry.png';\nimport { createGlobalStyle } from 'styled-components';\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background-color: var(--black);\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='32' viewBox='0 0 16 32'%3E%3Cg fill='%231D1E1F' fill-opacity='0.4'%3E%3Cpath fill-rule='evenodd' d='M0 24h4v2H0v-2zm0 4h6v2H0v-2zm0-8h2v2H0v-2zM0 0h4v2H0V0zm0 4h2v2H0V4zm16 20h-6v2h6v-2zm0 4H8v2h8v-2zm0-8h-4v2h4v-2zm0-20h-6v2h6V0zm0 4h-4v2h4V4zm-2 12h2v2h-2v-2zm0-8h2v2h-2V8zM2 8h10v2H2V8zm0 8h10v2H2v-2zm-2-4h14v2H0v-2zm4-8h6v2H4V4zm0 16h6v2H4v-2zM6 0h2v2H6V0zm0 24h2v2H6v-2z'/%3E%3C/g%3E%3C/svg%3E\");\n}\n\n* {\n    border-radius: 0 !important;\n    box-shadow: none !important;\n}\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px',\n    },\n  },\n}));\n\nconst Masonry = () => {\n  const classes = useStyles();\n  const { account } = useWallet();\n  const { onRedeem } = useRedeemOnMasonry();\n  const stakedBalance = useStakedBalanceOnMasonry();\n  const currentEpoch = useCurrentEpoch();\n  const cashStat = useCashPriceInEstimatedTWAP();\n  const totalStaked = useTotalStakedOnMasonry();\n  const masonryAPR = useFetchMasonryAPR();\n  const canClaimReward = useClaimRewardCheck();\n  const canWithdraw = useWithdrawCheck();\n  const scalingFactor = useMemo(() => (cashStat ? Number(cashStat.priceInDollars).toFixed(4) : null), [cashStat]);\n  const { to } = useTreasuryAllocationTimes();\n  const rebateStats = useRebateTreasury()\n\n  return (\n    <Page>\n      <BackgroundImage />\n      {!!account ? (\n        <>\n          <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n            Boardroom\n          </Typography>\n          <Box mt={5}>\n            <Grid container justify=\"center\" spacing={3}>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent>\n                    <Typography style={{ textAlign: 'center' }}>Next Epoch</Typography>\n                    <ProgressCountdown base={moment().toDate()} hideBar={true} deadline={to} description=\"Next Epoch\" />\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography>Current Epoch</Typography>\n                    <Typography>{Number(currentEpoch)}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography>\n                      BETH TWAP\n                    </Typography>\n                    <Typography>{rebateStats.tombPrice.toFixed(4)} ETH</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography>APR</Typography>\n                    <Typography>{masonryAPR.toFixed(2)}%</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography>Shares Staked</Typography>\n                    <Typography>{getDisplayBalance(totalStaked)}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\">\n              <Box mt={3} style={{ width: '525px' }}>\n                <Alert variant=\"transparent\" severity=\"info\">\n                  Staked Shares can be withdrawn after 3 epochs\n                </Alert>\n              </Box>\n            </Grid>\n\n            <Box mt={4}>\n              <StyledBoardroom>\n                <StyledCardsWrapper>\n                  <StyledCardWrapper>\n                    <Harvest />\n                  </StyledCardWrapper>\n                  <Spacer />\n                  <StyledCardWrapper>\n                    <Stake />\n                  </StyledCardWrapper>\n                </StyledCardsWrapper>\n              </StyledBoardroom>\n            </Box>\n\n            {/* <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent align=\"center\">\n                  <Typography>Rewards</Typography>\n\n                </CardContent>\n                <CardActions style={{justifyContent: 'center'}}>\n                  <Button color=\"primary\" variant=\"outlined\">Claim Reward</Button>\n                </CardActions>\n                <CardContent align=\"center\">\n                  <Typography>Claim Countdown</Typography>\n                  <Typography>00:00:00</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent align=\"center\">\n                  <Typography>Stakings</Typography>\n                  <Typography>{getDisplayBalance(stakedBalance)}</Typography>\n                </CardContent>\n                <CardActions style={{justifyContent: 'center'}}>\n                  <Button>+</Button>\n                  <Button>-</Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid> */}\n          </Box>\n\n          <Box mt={5}>\n            <Grid container justify=\"center\" spacing={3} mt={10}>\n              <Button\n                disabled={stakedBalance.eq(0) || (!canWithdraw && !canClaimReward)}\n                onClick={onRedeem}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Claim and Withdraw\n              </Button>\n            </Grid>\n          </Box>\n        </>\n      ) : (\n        <UnlockWallet />\n      )}\n    </Page>\n  );\n};\n\nconst StyledBoardroom = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nexport default Masonry;\n","import { useCallback } from 'react';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { useAddPopup } from '../state/application/hooks';\n\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<TransactionResponse>, summary: string) => {\n      promise\n        .then((tx) => addTransaction(tx, { summary }))\n        .catch((err) => {\n          if (err.message.includes('User denied')) {\n            // User denied transaction signature on MetaMask.\n            return;\n          }\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\n          console.error(`${message}: ${err.message || err.stack}`);\n          addPopup({ error: { message, stack: err.message || err.stack } });\n        });\n    },\n    [addPopup, addTransaction],\n  );\n}\n\nexport default useHandleTransactionReceipt;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport AccountButton from '../Nav/AccountButton';\n\nconst UnlockWallet = () => {\n  return (\n    <Box style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\n      <AccountButton />\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\n    </Box>\n  );\n};\n\nexport default UnlockWallet;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface CardIconProps {\n  children?: React.ReactNode;\n}\n\nconst CardIcon: React.FC<CardIconProps> = ({ children }) => <StyledCardIcon>{children}</StyledCardIcon>;\n\nconst StyledCardIcon = styled.div`\n  background-color: none;\n  font-size: 36px;\n  height: 95px;\n  width: 95px;\n  border-radius: 40px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  box-shadow: none !important;\n  margin: 0 auto ${(props) => props.theme.spacing[3]}px;\n`;\n\nexport default CardIcon;\n","import { BigNumber, ethers } from 'ethers';\nimport { useCallback, useMemo } from 'react';\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport ERC20 from '../tomb-finance/ERC20';\n\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\n  const pendingApproval = useHasPendingApproval(token.address, spender);\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [currentAllowance, pendingApproval]);\n\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    const response = await token.approve(spender, APPROVE_AMOUNT);\n    addTransaction(response, {\n      summary: `Approve ${token.symbol}`,\n      approval: {\n        tokenAddress: token.address,\n        spender: spender,\n      },\n    });\n  }, [approvalState, token, spender, addTransaction]);\n\n  return [approvalState, approve];\n}\n\nexport default useApprove;\n","import { useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport { TokenStat } from '../tomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useTombStats = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const { fastRefresh } = useRefresh();\n  const tombFinance = useTombFinance();\n\n  useEffect(() => {\n    async function fetchTombPrice(){\n      try {\n        setStat(await tombFinance.getTombStat());\n      }\n      catch(err){\n        console.error(err)\n      }\n    }\n    fetchTombPrice();\n  }, [setStat, tombFinance, fastRefresh]);\n\n  return stat;\n};\n\nexport default useTombStats;\n","import { useEffect, useState } from \"react\"\nimport Web3 from \"web3\"\n\nconst RebateTreasuryABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Tomb\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TombOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Treasury\",\"outputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WFTM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAdded\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondVesting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buybackAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"call\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"claimableTomb\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBondPremium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTombPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTombReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBuyback\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"redeemAssetsForBuyback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondaryFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondaryThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAdded\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"setAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"primaryThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"primaryFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingPeriod\",\"type\":\"uint256\"}],\"name\":\"setBondParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tomb\",\"type\":\"address\"}],\"name\":\"setTomb\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"setTombOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vesting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nconst ERC20ABI = [{ \"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"name\": \"\", \"type\": \"string\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_spender\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_from\", \"type\": \"address\" }, { \"name\": \"_to\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint8\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"_owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"name\": \"balance\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"name\": \"\", \"type\": \"string\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_to\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"_owner\", \"type\": \"address\" }, { \"name\": \"_spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"fallback\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" } ]\n\nconst web3 = new Web3(\"https://rpc.ftm.tools\")\nconst RebateTreasury = new web3.eth.Contract(RebateTreasuryABI, \"0x8f555E00ea0FAc871b3Aa70C015915dB094E7f88\")\nconst Threeomb = new web3.eth.Contract(ERC20ABI, \"0x14DEf7584A6c52f470Ca4F4b9671056b22f4FfDE\")\n\nconst assetList = [\n    \"0xc54A1684fD1bef1f077a336E6be4Bd9a3096a6Ca\", // 2shares\n    \"0x6398ACBBAB2561553a9e458Ab67dCFbD58944e52\", // 2shares/FTM LP\n    \"0x83A52eff2E9D112E9B022399A9fD22a9DB7d33Ae\", // 3omb/wftm\n    \"0x6437ADAC543583C4b31Bf0323A0870430F5CC2e7\", //3shares\n    \"0xd352daC95a91AfeFb112DBBB3463ccfA5EC15b65\", //3shares/wftm\n]\n\nfunction useRebateTreasury() {\n\n    const [ tombPrice, setTombPrice ] = useState(0)\n    const [ tombAvailable, setTombAvailable ] = useState(0)\n    const [ bondPremium, setBondPremium ] = useState(0)\n    const [ bondVesting, setBondVesting ] = useState(0)\n    const [ assets, setAssets ] = useState(assetList.map(asset => ({\n        token: asset,\n        params: {\n            multiplier: 0,\n            isLP: false\n        },\n        price: 0\n    })))\n\n    async function update() {\n        const [\n            tombPrice,\n            tombBalance,\n            vestedTomb,\n            bondPremium,\n            bondVesting,\n            assetParams,\n            assetPrices\n        ] = await Promise.all([\n            RebateTreasury.methods.getTombPrice().call(),\n            Threeomb.methods.balanceOf(RebateTreasury._address).call(),\n            RebateTreasury.methods.totalVested().call(),\n            RebateTreasury.methods.getBondPremium().call(),\n            RebateTreasury.methods.bondVesting().call(),\n            Promise.all(assetList.map(asset => RebateTreasury.methods.assets(asset).call())),\n            Promise.all(assetList.map(asset => RebateTreasury.methods.getTokenPrice(asset).call()))\n        ])\n\n        setTombPrice(+web3.utils.fromWei(tombPrice))\n        setTombAvailable(+web3.utils.fromWei(tombBalance) - +web3.utils.fromWei(vestedTomb))\n        setBondPremium(+bondPremium / 10000)\n        setBondVesting(+bondVesting / 10000)\n\n        const assets = []\n        for (let a = 0; a < assetList.length; a ++) {\n            assets.push({\n                token: assetList[a],\n                params: {\n                    multiplier: assetParams[a].multiplier,\n                    isLP: assetParams[a].isLP\n                },\n                price: +web3.utils.fromWei(assetPrices[a])\n            })\n        }\n        setAssets(assets)\n    }\n\n    useEffect(() => {\n        update()\n        const interval = setInterval(update, 10000)\n        return () => clearInterval(interval)\n    }, [])\n\n    return {\n        RebateTreasury,\n        tombPrice,\n        bondPremium,\n        bondVesting,\n        tombAvailable,\n        assets\n    }\n}\n\nexport default useRebateTreasury","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext);\n\n  let s: number;\n  switch (size) {\n    case 'lg':\n      s = spacing[6];\n      break;\n    case 'sm':\n      s = spacing[2];\n      break;\n    case 'md':\n    default:\n      s = spacing[4];\n  }\n\n  return <StyledSpacer size={s} />;\n};\n\ninterface StyledSpacerProps {\n  size: number;\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`;\n\nexport default Spacer;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\ninterface ValueProps {\n  value: string;\n}\n\nconst Value: React.FC<ValueProps> = ({ value }) => {\n  return <StyledValue>{value}</StyledValue>;\n};\n\nconst StyledValue = styled.div`\n  font-size: 36px;\n  font-weight: 700;\n`;\n\nexport default Value;\n","import { useCallback, useEffect, useState } from 'react';\n\nimport useTombFinance from './useTombFinance';\nimport config from '../config';\nimport ERC20 from '../tomb-finance/ERC20';\n\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\n  const tombFinance = useTombFinance();\n  const isUnlocked = tombFinance?.isUnlocked;\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await tombFinance.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\n    setStakedTokenPriceInDollars(balance);\n  }, [stakedToken, stakedTokenName, tombFinance]);\n\n  useEffect(() => {\n    if (isUnlocked) {\n      fetchBalance().catch((err) => console.error(err.stack));\n\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\n    }\n  }, [isUnlocked, setStakedTokenPriceInDollars, tombFinance, fetchBalance]);\n\n  return stakedTokenPriceInDollars;\n};\n\nexport default useStakedTokenPriceInDollars;\n","import { useEffect, useState } from 'react';\nimport useTombFinance from './useTombFinance';\nimport { TokenStat } from '../tomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useCashPriceInEstimatedTWAP = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const tombFinance = useTombFinance();\n  const { slowRefresh } = useRefresh(); \n\n  useEffect(() => {\n    async function fetchCashPrice() {\n      try {\n        setStat(await tombFinance.getTombStatInEstimatedTWAP());\n      }catch(err) {\n        console.error(err);\n      }\n    }\n    fetchCashPrice();\n  }, [setStat, tombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useCashPriceInEstimatedTWAP;\n"],"sourceRoot":""}